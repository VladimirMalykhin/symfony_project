# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    epacks_directory: '%kernel.project_dir%/public/uploads'
    temp_directory: '%kernel.project_dir%/public/temp'
    public_directory: '%kernel.project_dir%/public'
    font_directory: '%kernel.project_dir%/public/fonts'
    base_directory: '%kernel.project_dir%'
    collections_directory: '%kernel.project_dir%/templates/collections'
    securityHttpHeaderName: '%env(SECURITY_HTTP_HEADER_NAME)%'
    securityHttpHeaderValue: '%env(SECURITY_HTTP_HEADER_VALUE)%'
    app.id_integer_regex: '\d+'
    domain: '%env(DOMAIN)%'
    panel_url: '%env(PANEL_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
                $username: ''
                $password: ''
                $salt: ''
                $roles: []
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            
            
     # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        public: true
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
       
